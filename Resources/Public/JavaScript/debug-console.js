/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import $ from"jquery";import"@typo3/backend/element/icon-element.js";class DebugConsole{constructor(){this.settings={autoscroll:!0},$(()=>{this.createDom()})}static incrementInactiveTabCounter(t){if(!t.hasClass("active")){const e=t.find(".badge");let s=parseInt(e.text(),10);isNaN(s)&&(s=0),e.text(++s)}}add(t,e,s){this.attachToViewport();const n=$("<p />").html(t);void 0!==e&&e.length>0&&n.prepend($("<strong />").text(e)),void 0!==s&&0!==s.length||(s="Debug");const o="debugtab-"+s.toLowerCase().replace(/\W+/g,"-"),a=this.$consoleDom.find(".t3js-debuggroups"),i=this.$consoleDom.find(".t3js-debugcontent");let l=this.$consoleDom.find(".t3js-debuggroups li[data-identifier="+o+"]");0===l.length&&(l=$("<li />",{role:"presentation",class:"nav-item","data-identifier":o}).append($("<a />",{"aria-controls":o,"data-bs-toggle":"tab",class:"nav-link",href:"#"+o,role:"tab"}).text(s+" ").append($("<span />",{class:"badge"}))).on("shown.bs.tab",t=>{$(t.currentTarget).find(".badge").text("")}),a.append(l),i.append($("<div />",{role:"tabpanel",class:"tab-pane",id:o}).append($("<div />",{class:"t3js-messages messages"})))),0===a.find(".active").length&&a.find("a:first").tab("show"),DebugConsole.incrementInactiveTabCounter(l),this.incrementUnreadMessagesIfCollapsed();const d=$("#"+o+" .t3js-messages"),c=d.parent().hasClass("active");d.append(n),this.settings.autoscroll&&c&&d.scrollTop(d.prop("scrollHeight"))}createDom(){void 0===this.$consoleDom&&(this.$consoleDom=$("<div />",{id:"typo3-debug-console"}).append($("<div />",{class:"t3js-topbar topbar d-flex justify-content-between align-items-center"}).append($("<typo3-backend-icon />",{identifier:"actions-terminal",size:"small"}),$("<span />",{class:"flex-fill"}).text("TYPO3 Debug Console").append($("<span />",{class:"badge"})),$("<div />",{class:"t3js-buttons btn-group"})),$("<div />").append($("<div />",{role:"tabpanel"}).append($("<ul />",{class:"nav nav-tabs t3js-debuggroups",role:"tablist"})),$("<div />",{class:"tab-content t3js-debugcontent"}))),this.addButton($("<button />",{class:"btn btn-default btn-sm "+(this.settings.autoscroll?"active":""),title:TYPO3.lang["debuggerconsole.autoscroll"]}).append($("<typo3-backend-icon />",{identifier:"actions-magnet",size:"small"})),()=>{$(this).button("toggle"),this.settings.autoscroll=!this.settings.autoscroll}).addButton($("<button />",{class:"btn btn-default btn-sm",title:TYPO3.lang["debuggerconsole.toggle.collapse"]}).append($("<typo3-backend-icon />",{identifier:"actions-chevron-down",size:"small"})),t=>{let e=$(t.currentTarget),s=e.find("typo3-backend-icon"),n=this.$consoleDom.find(".t3js-topbar").next();n.toggle(),n.is(":visible")?(e.attr("title",TYPO3.lang["debuggerconsole.toggle.collapse"]),s.replaceWith($("<typo3-backend-icon />",{identifier:"actions-chevron-down",size:"small"})),this.resetGlobalUnreadCounter()):(e.attr("title",TYPO3.lang["debuggerconsole.toggle.expand"]),s.replaceWith($("<typo3-backend-icon />",{identifier:"actions-chevron-up",size:"small"})))}).addButton($("<button />",{class:"btn btn-default btn-sm",title:TYPO3.lang["debuggerconsole.clear"]}).append($("<typo3-backend-icon />",{identifier:"actions-undo",size:"small"})),()=>{this.flush()}).addButton($("<button />",{class:"btn btn-default btn-sm",title:TYPO3.lang["debuggerconsole.close"]}).append($("<typo3-backend-icon />",{identifier:"actions-close",size:"small"})),()=>{this.destroy(),this.createDom()}))}addButton(t,e){return t.on("click",e),this.$consoleDom.find(".t3js-buttons").append(t),this}attachToViewport(){const t=$(".t3js-scaffold-content");0===t.has(this.$consoleDom).length&&t.append(this.$consoleDom)}incrementUnreadMessagesIfCollapsed(){const t=this.$consoleDom.find(".t3js-topbar");if(t.next().is(":hidden")){const e=t.find(".badge");let s=parseInt(e.text(),10);isNaN(s)&&(s=0),e.text(++s)}}resetGlobalUnreadCounter(){this.$consoleDom.find(".t3js-topbar").find(".badge").text("")}flush(){const t=this.$consoleDom.find(".t3js-debuggroups"),e=this.$consoleDom.find(".t3js-debugcontent");t.children().remove(),e.children().remove()}destroy(){this.$consoleDom.remove(),this.$consoleDom=void 0}}const debugConsole=new DebugConsole;TYPO3.DebugConsole=debugConsole;export default debugConsole;