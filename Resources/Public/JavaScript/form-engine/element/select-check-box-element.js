/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import DocumentService from"@typo3/core/document-service.js";import RegularEvent from"@typo3/core/event/regular-event.js";import Icons from"@typo3/backend/icons.js";var Identifier,IconIdentifier;!function(e){e.toggleAll=".t3js-toggle-checkboxes",e.singleItem=".t3js-checkbox",e.revertSelection=".t3js-revert-selection",e.toggleGroup=".t3js-toggle-selectcheckbox-group"}(Identifier||(Identifier={})),function(e){e.collapse="actions-view-list-collapse",e.expand="actions-view-list-expand"}(IconIdentifier||(IconIdentifier={}));class SelectCheckBoxElement{constructor(e){this.checkBoxId="",this.table=null,this.initiallyCheckedItems=null,this.checkBoxId=e,DocumentService.ready().then((t=>{this.table=t.getElementById(e).closest("table"),this.initiallyCheckedItems=this.getCheckedItems(),this.enableTriggerCheckBox(),this.registerEventHandler()}))}static allCheckBoxesAreChecked(e){const t=Array.from(e);return e.length===t.filter((e=>e.checked)).length}registerEventHandler(){new RegularEvent("change",((e,t)=>{const l=this.table.querySelectorAll(Identifier.singleItem),i=!SelectCheckBoxElement.allCheckBoxesAreChecked(l);l.forEach((e=>{e.checked=i})),t.checked=i,this.setRevertSelection()})).delegateTo(this.table,Identifier.toggleAll),new RegularEvent("change",this.setToggleAllState.bind(this)).delegateTo(this.table,Identifier.singleItem),new RegularEvent("change",this.setRevertSelection.bind(this)).delegateTo(this.table,Identifier.singleItem),new RegularEvent("click",(()=>{const e=this.table.querySelectorAll(Identifier.singleItem),t=Array.from(this.initiallyCheckedItems);e.forEach((e=>{e.checked=t.includes(e)})),this.setToggleAllState(),this.setRevertSelection()})).delegateTo(this.table,Identifier.revertSelection),new RegularEvent("click",this.toggleGroup).delegateTo(document,Identifier.toggleGroup)}setToggleAllState(){const e=this.table.querySelectorAll(Identifier.singleItem);this.table.querySelector(Identifier.toggleAll).checked=SelectCheckBoxElement.allCheckBoxesAreChecked(e)}setRevertSelection(){const e=this.table.querySelector(Identifier.revertSelection);if(null!==e){const t=Array.from(this.getCheckedItems()).sort().map((e=>e.getAttribute("id"))),l=Array.from(this.initiallyCheckedItems).sort().map((e=>e.getAttribute("id"))),i=JSON.stringify(t)===JSON.stringify(l);e.toggleAttribute("disabled",i)}}enableTriggerCheckBox(){const e=this.table.querySelectorAll(Identifier.singleItem);document.getElementById(this.checkBoxId).checked=SelectCheckBoxElement.allCheckBoxesAreChecked(e)}getCheckedItems(){return this.table.querySelectorAll(Identifier.singleItem+":checked")}toggleGroup(e,t){e.preventDefault();const l="true"===t.ariaExpanded,i=t.querySelector(".collapseIcon"),c=l?IconIdentifier.collapse:IconIdentifier.expand;Icons.getIcon(c,Icons.sizes.small).then((e=>{i.innerHTML=e}))}}export default SelectCheckBoxElement;