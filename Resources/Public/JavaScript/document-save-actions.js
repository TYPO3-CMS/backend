/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import DocumentService from"@typo3/core/document-service.js";import Icons from"@typo3/backend/icons.js";import RegularEvent from"@typo3/core/event/regular-event.js";class DocumentSaveActions{constructor(){this.preventDoubleClick=!1,this.preSubmitCallbacks=[],DocumentService.ready().then((()=>{this.initializeSaveHandling()}))}static getInstance(){return null===DocumentSaveActions.instance&&(DocumentSaveActions.instance=new DocumentSaveActions),DocumentSaveActions.instance}static registerEvents(){DocumentSaveActions.getInstance()}addPreSubmitCallback(e){if("function"!=typeof e)throw"callback must be a function.";this.preSubmitCallbacks.push(e)}initializeSaveHandling(){const e=document.querySelector(".t3js-module-docheader");if(null===e)return;const t=["button[form]",'button[name^="_save"]','a[data-name^="_save"]','button[name="CMD"][value^="save"]','a[data-name="CMD"][data-value^="save"]'].join(",");new RegularEvent("click",((e,t)=>{if(this.preventDoubleClick)return;const n=this.getAttachedForm(t);if(null!==n){for(const t of this.preSubmitCallbacks){if(!t(e))return void e.preventDefault()}this.preventDoubleClick=!0,this.attachSaveFieldToForm(n,t),n.addEventListener("submit",(()=>{const e=t.closest(".t3js-splitbutton");let n;null!==e?(n=e.firstElementChild,e.querySelectorAll("button").forEach((e=>{e.disabled=!0}))):(n=t,n instanceof HTMLAnchorElement?n.classList.add("disabled"):n.disabled=!0),Icons.getIcon("spinner-circle",Icons.sizes.small).then((e=>{n.replaceChild(document.createRange().createContextualFragment(e),t.querySelector(".t3js-icon"))})).catch((()=>{}))}),{once:!0})}})).delegateTo(e,t)}getAttachedForm(e){let t;return t=e instanceof HTMLAnchorElement?document.querySelector("#"+e.dataset.form):e.form,t||(t=e.closest("form")),t}attachSaveFieldToForm(e,t){const n=e.name+"_save_field";let a=document.getElementById(n);null===a&&(a=document.createElement("input"),a.id=n,a.type="hidden",e.append(a)),a.name=t instanceof HTMLAnchorElement?t.dataset.name:t.name,a.value=t instanceof HTMLAnchorElement?t.dataset.value:t.value}}DocumentSaveActions.instance=null;export default DocumentSaveActions;